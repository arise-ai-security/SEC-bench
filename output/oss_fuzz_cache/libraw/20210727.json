{
  "commit": "84faf557299268508cef5d2a0adfcc882f6f7478",
  "files": {
    "Dockerfile": "# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nFROM gcr.io/oss-fuzz-base/base-builder\nRUN apt-get update && apt-get install -y make autoconf automake libtool pkg-config\nRUN git clone --depth 1 https://github.com/libraw/libraw\nWORKDIR libraw\n\nADD http://oss-fuzz-corpus.storage.googleapis.com/libraw/libraw_cr2_fuzzer_seed_corpus.zip $SRC/\nADD http://oss-fuzz-corpus.storage.googleapis.com/libraw/libraw_nef_fuzzer_seed_corpus.zip $SRC/\nADD http://oss-fuzz-corpus.storage.googleapis.com/libraw/libraw_raf_fuzzer_seed_corpus.zip $SRC/\n\nCOPY build.sh libraw_fuzzer.cc $SRC/\n",
    "build.sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# copy corpuses\ncp $SRC/libraw_cr2_fuzzer_seed_corpus.zip \\\n    $SRC/libraw_nef_fuzzer_seed_corpus.zip \\\n    $SRC/libraw_raf_fuzzer_seed_corpus.zip \\\n    $OUT/\n\n# build project\nautoreconf --install\n./configure --disable-examples\nmake\n\n# build fuzzers\n$CXX $CXXFLAGS -std=c++11 -Ilibraw \\\n    $SRC/libraw_fuzzer.cc -o $OUT/libraw_fuzzer \\\n    $LIB_FUZZING_ENGINE lib/.libs/libraw.a\n\n$CXX $CXXFLAGS -std=c++11 -Ilibraw \\\n    $SRC/libraw_fuzzer.cc -o $OUT/libraw_cr2_fuzzer \\\n    $LIB_FUZZING_ENGINE lib/.libs/libraw.a\n\n$CXX $CXXFLAGS -std=c++11 -Ilibraw \\\n    $SRC/libraw_fuzzer.cc -o $OUT/libraw_nef_fuzzer \\\n    $LIB_FUZZING_ENGINE lib/.libs/libraw.a\n\n$CXX $CXXFLAGS -std=c++11 -Ilibraw \\\n    $SRC/libraw_fuzzer.cc -o $OUT/libraw_raf_fuzzer \\\n    $LIB_FUZZING_ENGINE lib/.libs/libraw.a\n",
    "libraw_fuzzer.cc": "/*  Copyright 2020 Google Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n#include <stddef.h>\n#include <stdint.h>\n\n#include <string>\n\n#include <libraw.h>\n\nenum InterpolationOptions {\n  Linear = 0,\n  Vng = 1, \n  Ppg = 2,\n  Ahd = 3,\n  Dcb = 4,\n  Dht = 11,\n  AhdModified = 12\n};\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size) {\n  // Input less than 15mb\n  if (size > 15000000) {\n    return 0;\n  }\n\n  LibRaw lib_raw;\n\n  int result = lib_raw.open_buffer(\n      const_cast<char*>(reinterpret_cast<const char*>(data)), size);\n  if (result != LIBRAW_SUCCESS) {\n    return 0;\n  }\n\n  result = lib_raw.unpack();\n  if (result != LIBRAW_SUCCESS) {\n    return 0;\n  }\n\n  InterpolationOptions options[] = {Linear, Vng, Ppg, Ahd, Dcb, Dht, AhdModified};\n\n  for (int i = 0; i < sizeof(options)/sizeof(*options); i++) {\n    lib_raw.output_params_ptr()->user_qual = static_cast<int>(options[i]);\n\n    result = lib_raw.dcraw_process();\n    if (result != LIBRAW_SUCCESS) {\n      return 0;\n    }\n  }\n\n  return 0;\n}\n",
    "project.yaml": "homepage: \"https://www.libraw.org/\"\nlanguage: c++\nprimary_contact: \"jesteele@google.com\"\nauto_ccs:\n    - \"nchusid@google.com\"\n    - \"pinheirojamie@google.com\"\nsanitizers:\n    - address\n    - memory\n    - undefined\nmain_repo: 'https://github.com/libraw/libraw'\n"
  },
  "date": "2021-07-27T07:02:08",
  "cached_at": "2025-10-24T14:47:38.115234"
}