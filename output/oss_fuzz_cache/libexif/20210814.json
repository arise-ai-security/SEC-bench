{
  "commit": "84faf557299268508cef5d2a0adfcc882f6f7478",
  "files": {
    "Dockerfile": "# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nFROM gcr.io/oss-fuzz-base/base-builder\nRUN apt-get update && apt-get install -y make autoconf automake libtool gettext autopoint\nRUN git clone --depth 1 https://github.com/libexif/libexif\nRUN git clone --depth 1 https://github.com/ianare/exif-samples\nWORKDIR libexif\nCOPY exif_loader_fuzzer.cc exif_from_data_fuzzer.cc build.sh $SRC/\n",
    "build.sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nautoreconf -fiv\n./configure --disable-docs --enable-shared=no --prefix=\"$WORK\"\nmake -j$(nproc)\nmake install\n\npushd $SRC\nmkdir -p exif_corpus\nfind exif-samples -type f -name '*.jpg' -exec mv -n {} exif_corpus/ \\; -o -name '*.tiff' -exec mv -n {} exif_corpus/ \\;\ncp libexif/test/testdata/*.jpg exif_corpus\nzip -r \"$WORK/exif_seed_corpus.zip\" exif_corpus/\npopd\n\nfor fuzzer in $(find $SRC/ -name '*_fuzzer.cc'); do\n  fuzzer_basename=$(basename -s .cc $fuzzer)\n  $CXX $CXXFLAGS \\\n      -std=c++11 \\\n      -I\"$WORK/include\" \\\n      $fuzzer \\\n      -o $OUT/$fuzzer_basename \\\n      $LIB_FUZZING_ENGINE \\\n      \"$WORK/lib/libexif.a\"\n  cp $WORK/exif_seed_corpus.zip \"${OUT}/${fuzzer_basename}_seed_corpus.zip\"\ndone\n",
    "exif_from_data_fuzzer.cc": "// Copyright 2020 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n#include <libexif/exif-data.h>\n#include <libexif/exif-loader.h>\n#include <stddef.h>\n#include <stdlib.h>\n\n/* Extract all MakerNote tags */\nstatic void mnote_dump(ExifData *data) {\n    ExifMnoteData *mn = exif_data_get_mnote_data(data);\n    if (mn) {\n        int num = exif_mnote_data_count(mn);\n\n        /* Loop through all MakerNote tags */\n        for (int i=0; i < num; ++i) {\n            char buf[1024];\n            exif_mnote_data_get_value(mn, i, buf, sizeof(buf));\n        }\n    }\n}\n\nstatic void dump_value(ExifEntry *entry, void *user_data) {\n  char buf[1024];\n  exif_entry_get_value(entry, buf, sizeof(buf));\n}\n\nstatic void data_func(ExifContent *content, void *user_data) {\n  exif_content_foreach_entry(content, dump_value, NULL);\n}\n\n/* This is like exif_data_dump but without writing to stdout */\nstatic void data_dump(ExifData *data) {\n  exif_data_foreach_content(data, data_func, NULL);\n}\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n\n  // Parse tags using (ultimately) exif_data_load_data()\n  auto image = exif_data_new_from_data(data, size);\n  if (image) {\n    // Exercise the EXIF tag manipulation code\n    exif_data_get_mnote_data(image);\n    data_dump(image);\n    mnote_dump(image);\n    unsigned char *buf;\n    unsigned int sz;\n    exif_data_save_data(image, &buf, &sz);\n    free(buf);\n    exif_data_fix(image);\n    exif_data_unref(image);\n  }\n\n  return 0;\n}\n",
    "exif_loader_fuzzer.cc": "// Copyright 2020 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n#include <stdio.h>\n#include <stdint.h>\n#include <libexif/exif-loader.h>\n\n\nvoid content_func(ExifEntry *entry, void *user_data) {\n  char buf[10000];\n  exif_entry_get_value(entry, buf, sizeof(buf));\n}\n\nvoid data_func(ExifContent *content, void *user_data) {\n  exif_content_foreach_entry(content, content_func, NULL);\n}\n\nstatic void\ntest_exif_data (ExifData *d) {\n  unsigned int i, c;\n  char v[1024], *p;\n  ExifMnoteData *md;\n\n  md = exif_data_get_mnote_data (d);\n  if (!md) {\n    return;\n  }\n\n  exif_mnote_data_ref (md);\n  exif_mnote_data_unref (md);\n\n  c = exif_mnote_data_count (md);\n  for (i = 0; i < c; i++) {\n    const char *name = exif_mnote_data_get_name (md, i);\n    if (!name) {\n      break;\n    }\n    exif_mnote_data_get_title (md, i);\n    exif_mnote_data_get_description (md, i);\n    exif_mnote_data_get_value (md, i, v, sizeof (v));\n  }\n}\n\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n  ExifLoader *loader = exif_loader_new();\n  ExifData *exif_data;\n  if (!loader) {\n    return 0;\n  }\n  exif_loader_write(loader, const_cast<unsigned char*>(data), size);\n  exif_data = exif_loader_get_data(loader);\n  if(!exif_data) {\n    exif_loader_unref(loader);\n    return 0;\n  }\n  exif_data_foreach_content(exif_data, data_func, NULL);\n  test_exif_data (exif_data);\n  exif_loader_unref(loader);\n  exif_data_unref(exif_data);\n  return 0;\n}\n",
    "project.yaml": "homepage: \"https://libexif.github.io\"\nlanguage: c++\nprimary_contact: \"dan@coneharvesters.com\"\nauto_ccs:\n  - paul.l.kehrer@gmail.com\n  - marcus@jet.franken.de\n  - marcusmeissner@googlemail.com\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\n  - dataflow\nsanitizers:\n  - address\n  - dataflow\n  - memory\nmain_repo: 'https://github.com/libexif/libexif'\n"
  },
  "date": "2021-08-14T09:25:13",
  "cached_at": "2025-10-24T16:20:40.506850"
}