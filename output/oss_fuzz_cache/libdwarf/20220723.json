{
  "commit": "4d4111183be9bac4aede0be20f692a1ed5403bac",
  "files": {
    "Dockerfile": "# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nFROM gcr.io/oss-fuzz-base/base-builder\nRUN apt-get update && apt-get install -y make autoconf automake libtool\nRUN git clone --depth 1 https://github.com/davea42/libdwarf-code libdwarf\nRUN git clone --depth=1 https://github.com/DavidKorczynski/binary-samples $SRC/binary-samples\nWORKDIR libdwarf\nCOPY build.sh $SRC/\nCOPY fuzz*.c $SRC/\n",
    "build.sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport CFLAGS=\"${CFLAGS} -g -Werror\"\nexport CXXFLAGS=\"${CXXFLAGS} -g -Werror\"\n\nmkdir build\ncd build\ncmake ../\nmake\n\n# Build corpus for fuzzing\nmkdir $SRC/corp\ncp $SRC/binary-samples/elf* $SRC/corp\ncp $SRC/binary-samples/Mach* $SRC/corp\ncp $SRC/binary-samples/pe* $SRC/corp\ncp $SRC/binary-samples/lib* $SRC/corp\n\nzip -r -j $OUT/fuzz_init_path_seed_corpus.zip $SRC/corp\ncp $OUT/fuzz_init_path_seed_corpus.zip $OUT/fuzz_init_binary_seed_corpus.zip\n\nfor fuzzName in init_path init_binary; do\n  $CC $CFLAGS $LIB_FUZZING_ENGINE -I../src/lib/libdwarf/ \\\n    $SRC/fuzz_${fuzzName}.c -o $OUT/fuzz_${fuzzName} ./src/lib/libdwarf/libdwarf.a\ndone\n",
    "fuzz_init_binary.c": "/* Copyright 2021 Google LLC\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n      http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n#include <stdint.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <fcntl.h>\n#include <unistd.h>\n\n/*\n * Libdwarf library callers can only use these headers.\n */\n#include \"dwarf.h\"\n#include \"libdwarf.h\"\n\n/*\n * A fuzzer that simulates a small part of the simplereader.c example.\n * This fuzzer targets dwarf_init_b.\n */\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n  char filename[256];\n  sprintf(filename, \"/tmp/libfuzzer.%d\", getpid());\n\n  FILE *fp = fopen(filename, \"wb\");\n  if (!fp) {\n    return 0;\n  }\n  fwrite(data, size, 1, fp);\n  fclose(fp);\n\n  int my_init_fd = 0;\n  Dwarf_Ptr errarg = 0;\n  Dwarf_Handler errhand = 0;\n  Dwarf_Error *errp = NULL;\n  Dwarf_Debug dbg = 0;\n\n  my_init_fd = open(filename, O_RDONLY);\n  if (my_init_fd != -1) {\n    dwarf_init_b(my_init_fd,DW_GROUPNUMBER_ANY,errhand,errarg,&dbg,errp);\n    dwarf_finish(dbg);\n    close(my_init_fd);\n  }\n\n  unlink(filename);\n  return 0;\n}\n",
    "fuzz_init_path.c": "/* Copyright 2021 Google LLC\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n      http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n#include <stdint.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sys/types.h>\n#include <unistd.h>\n\n/*\n * Libdwarf library callers can only use these headers.\n */\n#include \"dwarf.h\"\n#include \"libdwarf.h\"\n\n/*\n * A fuzzer that simulates a small part of the simplereader.c example.\n */\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n  char filename[256];\n  sprintf(filename, \"/tmp/libfuzzer.%d\", getpid());\n\n  FILE *fp = fopen(filename, \"wb\");\n  if (!fp) {\n    return 0;\n  }\n  fwrite(data, size, 1, fp);\n  fclose(fp);\n  Dwarf_Ptr errarg = 0;\n  Dwarf_Handler errhand = 0;\n  Dwarf_Debug dbg = 0;\n  Dwarf_Error *errp = NULL;\n#define MACHO_PATH_LEN 2000\n  char macho_real_path[2000];\n  dwarf_init_path(filename, macho_real_path, MACHO_PATH_LEN,\n                  DW_GROUPNUMBER_ANY, errhand, errarg, &dbg, errp);\n\n  dwarf_finish(dbg);\n\n  unlink(filename);\n  return 0;\n}\n",
    "project.yaml": "homepage: \"https://www.prevanders.net/dwarf.html\"\nlanguage: c\nprimary_contact: \"davea42@gmail.com\"\nmain_repo: \"https://github.com/davea42/libdwarf-code\"\nauto_ccs:\n  - \"david@adalogics.com\"\n"
  },
  "date": "2022-07-23T10:40:32",
  "cached_at": "2025-10-24T18:27:15.054740"
}